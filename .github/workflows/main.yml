name: Manual Linux Build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Install Dependencies
      shell: bash
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y \
          libpixman-1-dev libfreetype6-dev libharfbuzz-dev zlib1g-dev \
          libx11-dev libxcursor-dev libxi-dev libgl1-mesa-dev libfontconfig1-dev

    - name: Install Skia
      shell: bash
      run: |
        skia_url=$(source ./laf/misc/skia-url.sh | xargs)
        skia_file=$(basename "$skia_url")
        curl --ssl-revoke-best-effort -L -o "$skia_file" "$skia_url"
        unzip "$skia_file" -d skia

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2.17
      with:
        key: linux-manual-build

    - uses: aseprite/get-ninja@main

    - name: Generate Makefiles
      shell: bash
      run: |
        export enable_ccache=on
        export enable_scripting=on
        export laf_backend=skia
        export skia_arch=x64

        cmake -S . -B build -G Ninja \
          -DCMAKE_BUILD_TYPE=RelWithDebInfo \
          -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 \
          -DENABLE_TESTS=ON \
          -DENABLE_SCRIPTING=$enable_scripting \
          -DENABLE_CCACHE=$enable_ccache \
          -DLAF_BACKEND=$laf_backend \
          -DSKIA_DIR=$(realpath skia) \
          -DSKIA_LIBRARY_DIR=$(realpath skia/out/Release-$skia_arch)

    - name: Compile
      shell: bash
      run: |
        cd build && ninja

    - name: Run C++ Tests
      shell: bash
      run: |
        xvfb-run ctest --test-dir build --output-on-failure

    - name: Run CLI Tests
      shell: bash
      run: |
        export ASEPRITE=$PWD/build/bin/aseprite
        cd tests && xvfb-run bash run-tests.sh

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: aseprite-build
        path: build/bin/
